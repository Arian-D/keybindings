#+title: Keybindings Reference
#+STARTUP: fold

|-----------------------------------+------------------+------------+---------------------------------+--------------|
| Task                              | Vanilla Emacs    | Vim/NeoVim | Helix                           | VSCode       |
|-----------------------------------+------------------+------------+---------------------------------+--------------|
| Go left                           | ~C-b~              | ~h~          | ~h~                               | ←            |
| Go down                           | ~C-n~              | ~j~          | ~j~                               | ↓            |
| Go right                          | ~C-f~              | ~l~          | ~l~                               | →            |
| Go up                             | ~C-p~              | ~k~          | ~k~                               | ↑            |
| Go the end of the line            | ~C-e~              | ~$~          | ~gl~                              | ~End~          |
| Go the beginning of the line      | ~C-a~              | ~0~          | ~gh~                              | ~Home~         |
| Go to the previous function       | ~M-2 C-M-a~        |            | ~[f~                              |              |
| Go to the next function           | ~M-2 C-M-e~        |            | ~]f~                              |              |
| Go to the matching bracket        |                  | ~%~          | ~mm~                              |              |
| Go to definition                  | ~M-.~              |            | ~gd~                              | ~F12~          |
| Go to the beginning of the buffer | ~C-<~              | ~gg~         | ~gg~                              | ~Ctrl+Home~    |
| Go to the top of the buffer       | ~C->~              | ~G~          | ~ge~                              | ~Ctrl+End~     |
| Highlight the entire buffer       | ~C-x h~            | ~ggvG~       | ~%~                               | ~Ctrl+A~       |
| Highlight next word               | ~M-F~              | ~vw~ or ~ve~   | ~w~ or ~e~                          |              |
| Highlight previous word           | ~M-B~              | ~vb~         | ~b~                               |              |
| Highlight paragraph               | ~M-h~              | ~vap~        | ~map~                             |              |
| Highlight function                | ~C-M-h~            |            | ~mif~ or ~maf~                      | ~F2~           |
| Delete until the end of the line  | ~C-k~              | ~D~          | ~t<RET>d~ or ~<C-k>~ in insert mode |              |
| Remove line                       | ~C-a C-k~          | ~dd~         | ~xd~                              | ~Shift+Delete~ |
| Remove character                  | ~C-d~              | ~x~          | ~d~                               | ~Delete~       |
| Change word                       | ~M-d~              | ~cw~         | ~wc~                              | double click |
| Rename variable                   | ~M-x eglot-rename~ |            | ~<space>r~                        |              |
| Comment/Uncomment                 | ~C-x C-;~          |            | ~<C-c>~                           | ~Ctrl+/~       |
| Undo                              | ~C-/~              | ~u~          | ~u~                               | ~Ctrl+Z~       |
| Redo                              | ~C-g C-/~          | ~<C-r>~      | ~U~                               | ~Ctrl+Shift+Z~ |
|-----------------------------------+------------------+------------+---------------------------------+--------------|

* Comments
- These are all editors with the default configuration, and no extra
  plugins.
- The notation is according to how they annotate it, i.e. Alt+A in CUA
  would be ~M-a~ in Emacs, ~<M-a>~ in Vim, and ~<A-a>~ in Helix.
- Nano, Vi, Notepad, etc are not included
* Opinionated Pros and Cons
I use *all* of these editors daily or weekly, and that is because I
don't believe there is a "best one". There is however _a_ best one for
different needs of mine:
- VSCode for helping other people code.
- Emacs for tailoring everything to my needs.
- Vim for new servers that don't have other editors.
- Helix for anything else. I do most of my coding on Helix.

That being said, I use Emacs and Helix the most, in that particular order.
*** Emacs
- These are emacs keybindings _without_ any vi overlay like viper, meow,
  or evil.
- I find these keybindings to be valuable to know and learn, because
  GNU readline uses similar bindings, which is used in most
  shells and programming language REPLs.
**** Why
- Emacs is probably the oldest here
- It is unquestionably /the/ most customizable editor (or even software) ever
  made
- Org mode, Gnus, Eshell, and many more unique packages
**** Why not
- Emacs is bloated with features a lot of people don't like or need
- Ugliest UI out of all, without configuration
- It has gotten better, but it is still buggy on Windows
- Not async
- Not modal by default
*** Vim
**** Why
- Available almost everywhere, and preinstalled in a lot of OSs
- Pioneer of modal editing
- Very fast
**** Why not
- Not intuitive
- Vim script
- No built-in Treesitter integration
- No GUI
*** Neovim
**** Why
- All the advantages of Vim
- Lua
- Great UI and 3rd party UI (like Neovide)
**** Why not
- No built-in structural editing like emacs or helix
*** VSCode
**** Why
- No learning curve
- Everything works out of the box
**** Why not
- JavaScript configuration is arguably more difficult than elisp or lua
- Resource-intensive
- Tied to Microsoft
*** Helix
**** Why
- Out of the box support for most LSPs
- Built-in tree sitter for syntax highlighting, navigation, and editing
- Lots of included themes
- Binaries exist for all platforms
**** Why not
- No GUI at the moment
- No extension or configuration system, which is probably its biggest
  turn-off
